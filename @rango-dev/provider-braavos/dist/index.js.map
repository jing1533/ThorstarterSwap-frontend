{
  "version": 3,
  "sources": ["../src/index.ts", "../src/helpers.ts", "../src/signer.ts"],
  "sourcesContent": ["import type {\n  CanEagerConnect,\n  CanSwitchNetwork,\n  Connect,\n  Subscribe,\n  WalletInfo,\n} from '@rango-dev/wallets-shared';\nimport type { BlockchainMeta, SignerFactory } from 'rango-types';\n\nimport { Networks, WalletTypes } from '@rango-dev/wallets-shared';\nimport { starknetBlockchain } from 'rango-types';\n\nimport { getBraavosInstance } from './helpers';\nimport signer from './signer';\n\nconst WALLET = WalletTypes.BRAAVOS;\n\nexport const config = {\n  type: WALLET,\n  defaultNetwork: Networks.STARKNET,\n};\n\nexport const getInstance = getBraavosInstance;\n\nexport const connect: Connect = async ({ instance }) => {\n  const accounts = await instance?.enable();\n  if (!accounts?.length || !instance.isConnected) {\n    throw new Error('Connection Error');\n  }\n\n  return { accounts: accounts || [], chainId: Networks.STARKNET };\n};\n\nexport const subscribe: Subscribe = ({ instance, state, updateAccounts }) => {\n  instance?.on('accountsChanged', (accounts: any) => {\n    if (state.connected) {\n      if (instance) {\n        updateAccounts([accounts], Networks.STARKNET);\n      }\n    }\n  });\n};\n\nexport const canSwitchNetworkTo: CanSwitchNetwork = () => false;\n\nexport const getSigners: (provider: any) => SignerFactory = signer;\n\nexport const canEagerConnect: CanEagerConnect = ({ instance }) =>\n  instance.isPreauthorized();\n\nexport const getWalletInfo: (allBlockChains: BlockchainMeta[]) => WalletInfo = (\n  allBlockChains\n) => {\n  const starknet = starknetBlockchain(allBlockChains);\n  return {\n    name: 'Braavos',\n    img: 'https://raw.githubusercontent.com/rango-exchange/assets/main/wallets/braavos/icon.svg',\n    installLink: {\n      CHROME:\n        'https://chrome.google.com/webstore/detail/braavos-smart-wallet/jnlgamecbpmbajjfhmmmlhejkemejdma',\n      BRAVE:\n        'https://chrome.google.com/webstore/detail/braavos-smart-wallet/jnlgamecbpmbajjfhmmmlhejkemejdma',\n      FIREFOX: 'https://addons.mozilla.org/en-US/firefox/addon/braavos-wallet/',\n      EDGE: 'https://microsoftedge.microsoft.com/addons/detail/braavos-wallet/hkkpjehhcnhgefhbdcgfkeegglpjchdc',\n      DEFAULT: 'https://braavos.app/',\n    },\n\n    color: '#96e7ed',\n    supportedChains: starknet,\n  };\n};\n", "export function getBraavosInstance() {\n  const { starknet_braavos } = window;\n  if (!!starknet_braavos) return starknet_braavos;\n  return null;\n}\n", "import { DefaultStarknetSigner } from '@rango-dev/signer-starknet';\nimport {\n  DefaultSignerFactory,\n  SignerFactory,\n  TransactionType as TxType,\n} from 'rango-types';\n\nexport default function getSigners(provider: any): SignerFactory {\n  const signers = new DefaultSignerFactory();\n  signers.registerSigner(TxType.STARKNET, new DefaultStarknetSigner(provider));\n  return signers;\n}\n"],
  "mappings": "+EASA,OAAS,YAAAA,EAAU,eAAAC,MAAmB,4BACtC,OAAS,sBAAAC,MAA0B,cCV5B,SAASC,GAAqB,CACnC,GAAM,CAAE,iBAAAC,CAAiB,EAAI,OAC7B,OAAMA,GACC,IACT,CAJgBC,EAAAF,EAAA,sBCAhB,OAAS,yBAAAG,MAA6B,6BACtC,OACE,wBAAAC,EAEA,mBAAmBC,MACd,cAEQ,SAARC,EAA4BC,EAA8B,CAC/D,IAAMC,EAAU,IAAIC,EACpB,OAAAD,EAAQ,eAAeE,EAAO,SAAU,IAAIC,EAAsBJ,CAAQ,CAAC,EACpEC,CACT,CAJwBI,EAAAN,EAAA,cFQxB,IAAMO,EAASC,EAAY,QAEdC,EAAS,CACpB,KAAMF,EACN,eAAgBG,EAAS,QAC3B,EAEaC,EAAcC,EAEdC,EAAmBC,EAAA,MAAO,CAAE,SAAAC,CAAS,IAAM,CACtD,IAAMC,EAAW,MAAMD,GAAU,OAAO,EACxC,GAAI,CAACC,GAAU,QAAU,CAACD,EAAS,YACjC,MAAM,IAAI,MAAM,kBAAkB,EAGpC,MAAO,CAAE,SAAUC,GAAY,CAAC,EAAG,QAASN,EAAS,QAAS,CAChE,EAPgC,WASnBO,EAAuBH,EAAA,CAAC,CAAE,SAAAC,EAAU,MAAAG,EAAO,eAAAC,CAAe,IAAM,CAC3EJ,GAAU,GAAG,kBAAoBC,GAAkB,CAC7CE,EAAM,WACJH,GACFI,EAAe,CAACH,CAAQ,EAAGN,EAAS,QAAQ,CAGlD,CAAC,CACH,EARoC,aAUvBU,EAAuCN,EAAA,IAAM,GAAN,sBAEvCO,EAA+CA,EAE/CC,EAAmCR,EAAA,CAAC,CAAE,SAAAC,CAAS,IAC1DA,EAAS,gBAAgB,EADqB,mBAGnCQ,EAAkET,EAC7EU,GACG,CACH,IAAMC,EAAWC,EAAmBF,CAAc,EAClD,MAAO,CACL,KAAM,UACN,IAAK,wFACL,YAAa,CACX,OACE,kGACF,MACE,kGACF,QAAS,iEACT,KAAM,oGACN,QAAS,sBACX,EAEA,MAAO,UACP,gBAAiBC,CACnB,CACF,EApB+E",
  "names": ["Networks", "WalletTypes", "starknetBlockchain", "getBraavosInstance", "starknet_braavos", "__name", "DefaultStarknetSigner", "DefaultSignerFactory", "TxType", "getSigners", "provider", "signers", "DefaultSignerFactory", "TxType", "DefaultStarknetSigner", "__name", "WALLET", "WalletTypes", "config", "Networks", "getInstance", "getBraavosInstance", "connect", "__name", "instance", "accounts", "subscribe", "state", "updateAccounts", "canSwitchNetworkTo", "getSigners", "canEagerConnect", "getWalletInfo", "allBlockChains", "starknet", "starknetBlockchain"]
}
