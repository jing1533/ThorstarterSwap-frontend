var E=Object.defineProperty;var o=(t,e)=>E(t,"name",{value:e,configurable:!0});import{Networks as a,WalletTypes as d,chooseInstance as l,getEvmAccounts as b,subscribeToEvm as k,canEagerlyConnectToEvm as A}from"@rango-dev/wallets-shared";import{Networks as s}from"@rango-dev/wallets-shared";function m(){let t=new Map,{solana:e,ethereum:n}=window;return e&&e.isMathWallet&&t.set(s.SOLANA,e),n&&n.isMathWallet&&t.set(s.ETHEREUM,n),t.size===0?null:t}o(m,"mathWallet");async function u(t){let e=t.get(s.SOLANA),n=[];if(e){let c=(await e.connect()).publicKey.toString();n.push({accounts:[c],chainId:s.SOLANA})}return n}o(u,"getNonEvmAccounts");import{DefaultEvmSigner as w}from"@rango-dev/signer-evm";import{DefaultSolanaSigner as S}from"@rango-dev/signer-solana";import{Networks as g,getNetworkInstance as p}from"@rango-dev/wallets-shared";import{DefaultSignerFactory as v,TransactionType as h}from"rango-types";function i(t){let e=p(t,g.ETHEREUM),n=p(t,g.SOLANA),r=new v;return r.registerSigner(h.EVM,new w(e)),r.registerSigner(h.SOLANA,new S(n)),r}o(i,"getSigners");import{evmBlockchains as y,solanaBlockchain as C}from"rango-types";var N=d.MATH,Z={type:N,defaultNetwork:a.ETHEREUM},$=m,tt=o(async({instance:t,meta:e})=>{let n=l(t,e,a.ETHEREUM),r=[];if(n){let f=await b(n);r.push(f)}let c=await u(t);return r=[...r,...c],r},"connect"),et=o(t=>{let e=l(t.instance,t.meta,a.ETHEREUM);e&&k({...t,instance:e})},"subscribe"),nt=o(()=>!1,"canSwitchNetworkTo"),ot=i,rt=o(({instance:t,meta:e})=>{let n=l(t,e,a.ETHEREUM);return n?A({instance:n,meta:e}):Promise.resolve(!1)},"canEagerConnect"),st=o(t=>{let e=y(t),n=C(t);return{name:"Math Wallet",img:"https://raw.githubusercontent.com/rango-exchange/assets/main/wallets/math/icon.svg",installLink:{CHROME:"https://chrome.google.com/webstore/detail/math-wallet/afbcbjpbpfadlkmhmclhkeeodmamcflc",BRAVE:"https://chrome.google.com/webstore/detail/math-wallet/afbcbjpbpfadlkmhmclhkeeodmamcflc",DEFAULT:"https://mathwallet.org/en-us/"},color:"#2b2f25",supportedChains:[...e,...n]}},"getWalletInfo");export{rt as canEagerConnect,nt as canSwitchNetworkTo,Z as config,tt as connect,$ as getInstance,ot as getSigners,st as getWalletInfo,et as subscribe};
//# sourceMappingURL=index.js.map
