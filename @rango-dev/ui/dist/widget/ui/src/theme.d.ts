/// <reference types="react" />
import type { DefaultThemeMap } from '@stitches/react/types/config';
export declare const theme: {
    colors: {
        primary: string;
        primary500: string;
        primary600: string;
        secondary: string;
        secondary100: string;
        secondary200: string;
        secondary300: string;
        secondary400: string;
        secondary500: string;
        secondary600: string;
        secondary700: string;
        secondary800: string;
        secondary900: string;
        neutral: string;
        neutral100: string;
        neutral200: string;
        neutral300: string;
        neutral400: string;
        neutral500: string;
        neutral600: string;
        neutral700: string;
        neutral800: string;
        neutral900: string;
        error100: string;
        error300: string;
        error500: string;
        error600: string;
        error700: string;
        warning100: string;
        warning300: string;
        warning500: string;
        warning600: string;
        warning700: string;
        info100: string;
        info300: string;
        info500: string;
        info600: string;
        info700: string;
        success100: string;
        success300: string;
        success500: string;
        success600: string;
        success700: string;
        background: string;
        foreground: string;
    };
    space: {
        0: string;
        5: string;
        10: string;
        15: string;
        20: string;
        25: string;
        30: string;
        40: string;
        46: string;
        50: string;
        60: string;
        70: string;
        80: string;
        90: string;
        100: string;
        2: string;
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        24: string;
        28: string;
        32: string;
    };
    radii: {
        xs: string;
        sm: string;
        xm: string;
        md: string;
        xl: string;
        lg: string;
        primary: string;
        secondary: string;
    };
    fontSizes: {
        10: string;
        12: string;
        14: string;
        16: string;
        18: string;
        20: string;
        22: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        48: string;
    };
    fonts: {
        primary: string;
        widget: string;
    };
    fontWeights: {
        regular: number;
        medium: number;
        semiBold: number;
        bold: number;
    };
    lineHeights: {
        12: string;
        16: string;
        20: string;
        24: string;
        26: string;
        28: string;
        30: string;
        36: string;
        40: string;
        44: string;
        52: string;
        64: string;
    };
    letterSpacings: {};
    sizes: {
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        18: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        45: string;
        48: string;
    };
    borderWidths: {};
    borderStyles: {};
    shadows: {
        s: string;
    };
    zIndices: {};
    transitions: {};
};
export declare const darkColors: {
    secondary: string;
    secondary400: string;
    secondary500: string;
    secondary600: string;
    neutral: string;
    neutral900: string;
    neutral800: string;
    neutral700: string;
    neutral600: string;
    neutral500: string;
    neutral400: string;
    neutral300: string;
    neutral200: string;
    neutral100: string;
    error500: string;
    warning500: string;
    background: string;
    foreground: string;
};
export declare const styled: <Type extends import("react").ComponentType<any> | import("@stitches/react/types/util").Function | keyof JSX.IntrinsicElements, Composers extends (string | import("react").ComponentType<any> | import("@stitches/react/types/util").Function | {
    [name: string]: unknown;
})[], CSS = import("@stitches/react/types/css-util").CSS<{
    sm: string;
    md: string;
    lg: string;
}, {
    colors: {
        primary: string;
        primary500: string;
        primary600: string;
        secondary: string;
        secondary100: string;
        secondary200: string;
        secondary300: string;
        secondary400: string;
        secondary500: string;
        secondary600: string;
        secondary700: string;
        secondary800: string;
        secondary900: string;
        neutral: string;
        neutral100: string;
        neutral200: string;
        neutral300: string;
        neutral400: string;
        neutral500: string;
        neutral600: string;
        neutral700: string;
        neutral800: string;
        neutral900: string;
        error100: string;
        error300: string;
        error500: string;
        error600: string;
        error700: string;
        warning100: string;
        warning300: string;
        warning500: string;
        warning600: string;
        warning700: string;
        info100: string;
        info300: string;
        info500: string;
        info600: string;
        info700: string;
        success100: string;
        success300: string;
        success500: string;
        success600: string;
        success700: string;
        background: string;
        foreground: string;
    };
    space: {
        0: string;
        5: string;
        10: string;
        15: string;
        20: string;
        25: string;
        30: string;
        40: string;
        46: string;
        50: string;
        60: string;
        70: string;
        80: string;
        90: string;
        100: string;
        2: string;
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        24: string;
        28: string;
        32: string;
    };
    radii: {
        xs: string;
        sm: string;
        xm: string;
        md: string;
        xl: string;
        lg: string;
        primary: string;
        secondary: string;
    };
    fontSizes: {
        10: string;
        12: string;
        14: string;
        16: string;
        18: string;
        20: string;
        22: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        48: string;
    };
    fonts: {
        primary: string;
        widget: string;
    };
    fontWeights: {
        regular: number;
        medium: number;
        semiBold: number;
        bold: number;
    };
    lineHeights: {
        12: string;
        16: string;
        20: string;
        24: string;
        26: string;
        28: string;
        30: string;
        36: string;
        40: string;
        44: string;
        52: string;
        64: string;
    };
    letterSpacings: {};
    sizes: {
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        18: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        45: string;
        48: string;
    };
    borderWidths: {};
    borderStyles: {};
    shadows: {
        s: string;
    };
    zIndices: {};
    transitions: {};
}, DefaultThemeMap, {}>>(type: Type, ...composers: { [K in keyof Composers]: string extends Composers[K] ? Composers[K] : Composers[K] extends string | import("react").ComponentType<any> | import("@stitches/react/types/util").Function ? Composers[K] : import("@stitches/react/types/stitches").RemoveIndex<CSS> & {
    variants?: {
        [x: string]: {
            [x: string]: CSS;
            [x: number]: CSS;
        };
    } | undefined;
    compoundVariants?: (("variants" extends keyof Composers[K] ? Composers[K][keyof Composers[K] & "variants"] extends infer T ? { [Name in keyof T]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name]> | undefined; } : never : import("@stitches/react/types/util").WideObject) & {
        css: CSS;
    })[] | undefined;
    defaultVariants?: ("variants" extends keyof Composers[K] ? Composers[K][keyof Composers[K] & "variants"] extends infer T_1 ? { [Name_1 in keyof T_1]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name_1]> | undefined; } : never : import("@stitches/react/types/util").WideObject) | undefined;
} & CSS & (Composers[K] extends infer T_2 ? { [K2 in keyof T_2]: K2 extends "compoundVariants" | "defaultVariants" | "variants" ? unknown : K2 extends keyof CSS ? CSS[K2] : unknown; } : never); }) => import("@stitches/react/types/styled-component").StyledComponent<Type, import("@stitches/react/types/styled-component").StyledComponentProps<Composers>, {
    sm: string;
    md: string;
    lg: string;
}, import("@stitches/react/types/css-util").CSS<{
    sm: string;
    md: string;
    lg: string;
}, {
    colors: {
        primary: string;
        primary500: string;
        primary600: string;
        secondary: string;
        secondary100: string;
        secondary200: string;
        secondary300: string;
        secondary400: string;
        secondary500: string;
        secondary600: string;
        secondary700: string;
        secondary800: string;
        secondary900: string;
        neutral: string;
        neutral100: string;
        neutral200: string;
        neutral300: string;
        neutral400: string;
        neutral500: string;
        neutral600: string;
        neutral700: string;
        neutral800: string;
        neutral900: string;
        error100: string;
        error300: string;
        error500: string;
        error600: string;
        error700: string;
        warning100: string;
        warning300: string;
        warning500: string;
        warning600: string;
        warning700: string;
        info100: string;
        info300: string;
        info500: string;
        info600: string;
        info700: string;
        success100: string;
        success300: string;
        success500: string;
        success600: string;
        success700: string;
        background: string;
        foreground: string;
    };
    space: {
        0: string;
        5: string;
        10: string;
        15: string;
        20: string;
        25: string;
        30: string;
        40: string;
        46: string;
        50: string;
        60: string;
        70: string;
        80: string;
        90: string;
        100: string;
        2: string;
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        24: string;
        28: string;
        32: string;
    };
    radii: {
        xs: string;
        sm: string;
        xm: string;
        md: string;
        xl: string;
        lg: string;
        primary: string;
        secondary: string;
    };
    fontSizes: {
        10: string;
        12: string;
        14: string;
        16: string;
        18: string;
        20: string;
        22: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        48: string;
    };
    fonts: {
        primary: string;
        widget: string;
    };
    fontWeights: {
        regular: number;
        medium: number;
        semiBold: number;
        bold: number;
    };
    lineHeights: {
        12: string;
        16: string;
        20: string;
        24: string;
        26: string;
        28: string;
        30: string;
        36: string;
        40: string;
        44: string;
        52: string;
        64: string;
    };
    letterSpacings: {};
    sizes: {
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        18: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        45: string;
        48: string;
    };
    borderWidths: {};
    borderStyles: {};
    shadows: {
        s: string;
    };
    zIndices: {};
    transitions: {};
}, DefaultThemeMap, {}>>, css: <Composers extends (string | import("react").JSXElementConstructor<any> | import("react").ExoticComponent<any> | import("@stitches/react/types/util").Function | {
    [name: string]: unknown;
})[], CSS = import("@stitches/react/types/css-util").CSS<{
    sm: string;
    md: string;
    lg: string;
}, {
    colors: {
        primary: string;
        primary500: string;
        primary600: string;
        secondary: string;
        secondary100: string;
        secondary200: string;
        secondary300: string;
        secondary400: string;
        secondary500: string;
        secondary600: string;
        secondary700: string;
        secondary800: string;
        secondary900: string;
        neutral: string;
        neutral100: string;
        neutral200: string;
        neutral300: string;
        neutral400: string;
        neutral500: string;
        neutral600: string;
        neutral700: string;
        neutral800: string;
        neutral900: string;
        error100: string;
        error300: string;
        error500: string;
        error600: string;
        error700: string;
        warning100: string;
        warning300: string;
        warning500: string;
        warning600: string;
        warning700: string;
        info100: string;
        info300: string;
        info500: string;
        info600: string;
        info700: string;
        success100: string;
        success300: string;
        success500: string;
        success600: string;
        success700: string;
        background: string;
        foreground: string;
    };
    space: {
        0: string;
        5: string;
        10: string;
        15: string;
        20: string;
        25: string;
        30: string;
        40: string;
        46: string;
        50: string;
        60: string;
        70: string;
        80: string;
        90: string;
        100: string;
        2: string;
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        24: string;
        28: string;
        32: string;
    };
    radii: {
        xs: string;
        sm: string;
        xm: string;
        md: string;
        xl: string;
        lg: string;
        primary: string;
        secondary: string;
    };
    fontSizes: {
        10: string;
        12: string;
        14: string;
        16: string;
        18: string;
        20: string;
        22: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        48: string;
    };
    fonts: {
        primary: string;
        widget: string;
    };
    fontWeights: {
        regular: number;
        medium: number;
        semiBold: number;
        bold: number;
    };
    lineHeights: {
        12: string;
        16: string;
        20: string;
        24: string;
        26: string;
        28: string;
        30: string;
        36: string;
        40: string;
        44: string;
        52: string;
        64: string;
    };
    letterSpacings: {};
    sizes: {
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        18: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        45: string;
        48: string;
    };
    borderWidths: {};
    borderStyles: {};
    shadows: {
        s: string;
    };
    zIndices: {};
    transitions: {};
}, DefaultThemeMap, {}>>(...composers: { [K in keyof Composers]: string extends Composers[K] ? Composers[K] : Composers[K] extends string | import("react").JSXElementConstructor<any> | import("react").ExoticComponent<any> | import("@stitches/react/types/util").Function ? Composers[K] : import("@stitches/react/types/stitches").RemoveIndex<CSS> & {
    variants?: {
        [x: string]: {
            [x: string]: CSS;
            [x: number]: CSS;
        };
    } | undefined;
    compoundVariants?: (("variants" extends keyof Composers[K] ? Composers[K][keyof Composers[K] & "variants"] extends infer T ? { [Name in keyof T]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name]> | undefined; } : never : import("@stitches/react/types/util").WideObject) & {
        css: CSS;
    })[] | undefined;
    defaultVariants?: ("variants" extends keyof Composers[K] ? Composers[K][keyof Composers[K] & "variants"] extends infer T_1 ? { [Name_1 in keyof T_1]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name_1]> | undefined; } : never : import("@stitches/react/types/util").WideObject) | undefined;
} & CSS & (Composers[K] extends infer T_2 ? { [K2 in keyof T_2]: K2 extends "compoundVariants" | "defaultVariants" | "variants" ? unknown : K2 extends keyof CSS ? CSS[K2] : unknown; } : never); }) => import("@stitches/react/types/styled-component").CssComponent<import("@stitches/react/types/styled-component").StyledComponentType<Composers>, import("@stitches/react/types/styled-component").StyledComponentProps<Composers>, {
    sm: string;
    md: string;
    lg: string;
}, CSS>, createTheme: <Argument0 extends string | ({
    colors?: {
        primary?: string | number | boolean | undefined;
        primary500?: string | number | boolean | undefined;
        primary600?: string | number | boolean | undefined;
        secondary?: string | number | boolean | undefined;
        secondary100?: string | number | boolean | undefined;
        secondary200?: string | number | boolean | undefined;
        secondary300?: string | number | boolean | undefined;
        secondary400?: string | number | boolean | undefined;
        secondary500?: string | number | boolean | undefined;
        secondary600?: string | number | boolean | undefined;
        secondary700?: string | number | boolean | undefined;
        secondary800?: string | number | boolean | undefined;
        secondary900?: string | number | boolean | undefined;
        neutral?: string | number | boolean | undefined;
        neutral100?: string | number | boolean | undefined;
        neutral200?: string | number | boolean | undefined;
        neutral300?: string | number | boolean | undefined;
        neutral400?: string | number | boolean | undefined;
        neutral500?: string | number | boolean | undefined;
        neutral600?: string | number | boolean | undefined;
        neutral700?: string | number | boolean | undefined;
        neutral800?: string | number | boolean | undefined;
        neutral900?: string | number | boolean | undefined;
        error100?: string | number | boolean | undefined;
        error300?: string | number | boolean | undefined;
        error500?: string | number | boolean | undefined;
        error600?: string | number | boolean | undefined;
        error700?: string | number | boolean | undefined;
        warning100?: string | number | boolean | undefined;
        warning300?: string | number | boolean | undefined;
        warning500?: string | number | boolean | undefined;
        warning600?: string | number | boolean | undefined;
        warning700?: string | number | boolean | undefined;
        info100?: string | number | boolean | undefined;
        info300?: string | number | boolean | undefined;
        info500?: string | number | boolean | undefined;
        info600?: string | number | boolean | undefined;
        info700?: string | number | boolean | undefined;
        success100?: string | number | boolean | undefined;
        success300?: string | number | boolean | undefined;
        success500?: string | number | boolean | undefined;
        success600?: string | number | boolean | undefined;
        success700?: string | number | boolean | undefined;
        background?: string | number | boolean | undefined;
        foreground?: string | number | boolean | undefined;
    } | undefined;
    space?: {
        0?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        10?: string | number | boolean | undefined;
        15?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        25?: string | number | boolean | undefined;
        30?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        46?: string | number | boolean | undefined;
        50?: string | number | boolean | undefined;
        60?: string | number | boolean | undefined;
        70?: string | number | boolean | undefined;
        80?: string | number | boolean | undefined;
        90?: string | number | boolean | undefined;
        100?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
    } | undefined;
    radii?: {
        xs?: string | number | boolean | undefined;
        sm?: string | number | boolean | undefined;
        xm?: string | number | boolean | undefined;
        md?: string | number | boolean | undefined;
        xl?: string | number | boolean | undefined;
        lg?: string | number | boolean | undefined;
        primary?: string | number | boolean | undefined;
        secondary?: string | number | boolean | undefined;
    } | undefined;
    fontSizes?: {
        10?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        14?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        18?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        22?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        48?: string | number | boolean | undefined;
    } | undefined;
    fonts?: {
        primary?: string | number | boolean | undefined;
        widget?: string | number | boolean | undefined;
    } | undefined;
    fontWeights?: {
        regular?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        semiBold?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
    } | undefined;
    lineHeights?: {
        12?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        26?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        30?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        44?: string | number | boolean | undefined;
        52?: string | number | boolean | undefined;
        64?: string | number | boolean | undefined;
    } | undefined;
    letterSpacings?: {} | undefined;
    sizes?: {
        4?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        18?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        45?: string | number | boolean | undefined;
        48?: string | number | boolean | undefined;
    } | undefined;
    borderWidths?: {} | undefined;
    borderStyles?: {} | undefined;
    shadows?: {
        s?: string | number | boolean | undefined;
    } | undefined;
    zIndices?: {} | undefined;
    transitions?: {} | undefined;
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
}), Argument1 extends string | ({
    colors?: {
        primary?: string | number | boolean | undefined;
        primary500?: string | number | boolean | undefined;
        primary600?: string | number | boolean | undefined;
        secondary?: string | number | boolean | undefined;
        secondary100?: string | number | boolean | undefined;
        secondary200?: string | number | boolean | undefined;
        secondary300?: string | number | boolean | undefined;
        secondary400?: string | number | boolean | undefined;
        secondary500?: string | number | boolean | undefined;
        secondary600?: string | number | boolean | undefined;
        secondary700?: string | number | boolean | undefined;
        secondary800?: string | number | boolean | undefined;
        secondary900?: string | number | boolean | undefined;
        neutral?: string | number | boolean | undefined;
        neutral100?: string | number | boolean | undefined;
        neutral200?: string | number | boolean | undefined;
        neutral300?: string | number | boolean | undefined;
        neutral400?: string | number | boolean | undefined;
        neutral500?: string | number | boolean | undefined;
        neutral600?: string | number | boolean | undefined;
        neutral700?: string | number | boolean | undefined;
        neutral800?: string | number | boolean | undefined;
        neutral900?: string | number | boolean | undefined;
        error100?: string | number | boolean | undefined;
        error300?: string | number | boolean | undefined;
        error500?: string | number | boolean | undefined;
        error600?: string | number | boolean | undefined;
        error700?: string | number | boolean | undefined;
        warning100?: string | number | boolean | undefined;
        warning300?: string | number | boolean | undefined;
        warning500?: string | number | boolean | undefined;
        warning600?: string | number | boolean | undefined;
        warning700?: string | number | boolean | undefined;
        info100?: string | number | boolean | undefined;
        info300?: string | number | boolean | undefined;
        info500?: string | number | boolean | undefined;
        info600?: string | number | boolean | undefined;
        info700?: string | number | boolean | undefined;
        success100?: string | number | boolean | undefined;
        success300?: string | number | boolean | undefined;
        success500?: string | number | boolean | undefined;
        success600?: string | number | boolean | undefined;
        success700?: string | number | boolean | undefined;
        background?: string | number | boolean | undefined;
        foreground?: string | number | boolean | undefined;
    } | undefined;
    space?: {
        0?: string | number | boolean | undefined;
        5?: string | number | boolean | undefined;
        10?: string | number | boolean | undefined;
        15?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        25?: string | number | boolean | undefined;
        30?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        46?: string | number | boolean | undefined;
        50?: string | number | boolean | undefined;
        60?: string | number | boolean | undefined;
        70?: string | number | boolean | undefined;
        80?: string | number | boolean | undefined;
        90?: string | number | boolean | undefined;
        100?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
    } | undefined;
    radii?: {
        xs?: string | number | boolean | undefined;
        sm?: string | number | boolean | undefined;
        xm?: string | number | boolean | undefined;
        md?: string | number | boolean | undefined;
        xl?: string | number | boolean | undefined;
        lg?: string | number | boolean | undefined;
        primary?: string | number | boolean | undefined;
        secondary?: string | number | boolean | undefined;
    } | undefined;
    fontSizes?: {
        10?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        14?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        18?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        22?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        48?: string | number | boolean | undefined;
    } | undefined;
    fonts?: {
        primary?: string | number | boolean | undefined;
        widget?: string | number | boolean | undefined;
    } | undefined;
    fontWeights?: {
        regular?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        semiBold?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
    } | undefined;
    lineHeights?: {
        12?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        26?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        30?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        44?: string | number | boolean | undefined;
        52?: string | number | boolean | undefined;
        64?: string | number | boolean | undefined;
    } | undefined;
    letterSpacings?: {} | undefined;
    sizes?: {
        4?: string | number | boolean | undefined;
        6?: string | number | boolean | undefined;
        8?: string | number | boolean | undefined;
        12?: string | number | boolean | undefined;
        16?: string | number | boolean | undefined;
        18?: string | number | boolean | undefined;
        20?: string | number | boolean | undefined;
        24?: string | number | boolean | undefined;
        28?: string | number | boolean | undefined;
        32?: string | number | boolean | undefined;
        36?: string | number | boolean | undefined;
        40?: string | number | boolean | undefined;
        45?: string | number | boolean | undefined;
        48?: string | number | boolean | undefined;
    } | undefined;
    borderWidths?: {} | undefined;
    borderStyles?: {} | undefined;
    shadows?: {
        s?: string | number | boolean | undefined;
    } | undefined;
    zIndices?: {} | undefined;
    transitions?: {} | undefined;
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
})>(nameOrScalesArg0: Argument0, nameOrScalesArg1?: Argument1 | undefined) => string & {
    className: string;
    selector: string;
} & (Argument0 extends string ? import("@stitches/react/types/stitches").ThemeTokens<Argument1, ""> : import("@stitches/react/types/stitches").ThemeTokens<Argument0, "">), keyframes: (style: {
    [offset: string]: import("@stitches/react/types/css-util").CSS<{
        sm: string;
        md: string;
        lg: string;
    }, {
        colors: {
            primary: string;
            primary500: string;
            primary600: string;
            secondary: string;
            secondary100: string;
            secondary200: string;
            secondary300: string;
            secondary400: string;
            secondary500: string;
            secondary600: string;
            secondary700: string;
            secondary800: string;
            secondary900: string;
            neutral: string;
            neutral100: string;
            neutral200: string;
            neutral300: string;
            neutral400: string;
            neutral500: string;
            neutral600: string;
            neutral700: string;
            neutral800: string;
            neutral900: string;
            error100: string;
            error300: string;
            error500: string;
            error600: string;
            error700: string;
            warning100: string;
            warning300: string;
            warning500: string;
            warning600: string;
            warning700: string;
            info100: string;
            info300: string;
            info500: string;
            info600: string;
            info700: string;
            success100: string;
            success300: string;
            success500: string;
            success600: string;
            success700: string;
            background: string;
            foreground: string;
        };
        space: {
            0: string;
            5: string;
            10: string;
            15: string;
            20: string;
            25: string;
            30: string;
            40: string;
            46: string;
            50: string;
            60: string;
            70: string;
            80: string;
            90: string;
            100: string;
            2: string;
            4: string;
            6: string;
            8: string;
            12: string;
            16: string;
            24: string;
            28: string;
            32: string;
        };
        radii: {
            xs: string;
            sm: string;
            xm: string;
            md: string;
            xl: string;
            lg: string;
            primary: string;
            secondary: string;
        };
        fontSizes: {
            10: string;
            12: string;
            14: string;
            16: string;
            18: string;
            20: string;
            22: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            48: string;
        };
        fonts: {
            primary: string;
            widget: string;
        };
        fontWeights: {
            regular: number;
            medium: number;
            semiBold: number;
            bold: number;
        };
        lineHeights: {
            12: string;
            16: string;
            20: string;
            24: string;
            26: string;
            28: string;
            30: string;
            36: string;
            40: string;
            44: string;
            52: string;
            64: string;
        };
        letterSpacings: {};
        sizes: {
            4: string;
            6: string;
            8: string;
            12: string;
            16: string;
            18: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            45: string;
            48: string;
        };
        borderWidths: {};
        borderStyles: {};
        shadows: {
            s: string;
        };
        zIndices: {};
        transitions: {};
    }, DefaultThemeMap, {}>;
}) => {
    (): string;
    name: string;
}, globalCss: <Styles extends {
    [K: string]: any;
}>(...styles: ({
    '@import'?: unknown;
    '@font-face'?: unknown;
} & { [K in keyof Styles]: K extends "@import" ? string | string[] : K extends "@font-face" ? import("@stitches/react/types/css").AtRule.FontFace | import("@stitches/react/types/css").AtRule.FontFace[] : K extends `@keyframes ${string}` ? {
    [x: string]: import("@stitches/react/types/css-util").CSS<{
        sm: string;
        md: string;
        lg: string;
    }, {
        colors: {
            primary: string;
            primary500: string;
            primary600: string;
            secondary: string;
            secondary100: string;
            secondary200: string;
            secondary300: string;
            secondary400: string;
            secondary500: string;
            secondary600: string;
            secondary700: string;
            secondary800: string;
            secondary900: string;
            neutral: string;
            neutral100: string;
            neutral200: string;
            neutral300: string;
            neutral400: string;
            neutral500: string;
            neutral600: string;
            neutral700: string;
            neutral800: string;
            neutral900: string;
            error100: string;
            error300: string;
            error500: string;
            error600: string;
            error700: string;
            warning100: string;
            warning300: string;
            warning500: string;
            warning600: string;
            warning700: string;
            info100: string;
            info300: string;
            info500: string;
            info600: string;
            info700: string;
            success100: string;
            success300: string;
            success500: string;
            success600: string;
            success700: string;
            background: string;
            foreground: string;
        };
        space: {
            0: string;
            5: string;
            10: string;
            15: string;
            20: string;
            25: string;
            30: string;
            40: string;
            46: string;
            50: string;
            60: string;
            70: string;
            80: string;
            90: string;
            100: string;
            2: string;
            4: string;
            6: string;
            8: string;
            12: string;
            16: string;
            24: string;
            28: string;
            32: string;
        };
        radii: {
            xs: string;
            sm: string;
            xm: string;
            md: string;
            xl: string;
            lg: string;
            primary: string;
            secondary: string;
        };
        fontSizes: {
            10: string;
            12: string;
            14: string;
            16: string;
            18: string;
            20: string;
            22: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            48: string;
        };
        fonts: {
            primary: string;
            widget: string;
        };
        fontWeights: {
            regular: number;
            medium: number;
            semiBold: number;
            bold: number;
        };
        lineHeights: {
            12: string;
            16: string;
            20: string;
            24: string;
            26: string;
            28: string;
            30: string;
            36: string;
            40: string;
            44: string;
            52: string;
            64: string;
        };
        letterSpacings: {};
        sizes: {
            4: string;
            6: string;
            8: string;
            12: string;
            16: string;
            18: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            45: string;
            48: string;
        };
        borderWidths: {};
        borderStyles: {};
        shadows: {
            s: string;
        };
        zIndices: {};
        transitions: {};
    }, DefaultThemeMap, {}>;
} : K extends `@property ${string}` ? import("@stitches/react/types/css").AtRule.Property : import("@stitches/react/types/css-util").CSS<{
    sm: string;
    md: string;
    lg: string;
}, {
    colors: {
        primary: string;
        primary500: string;
        primary600: string;
        secondary: string;
        secondary100: string;
        secondary200: string;
        secondary300: string;
        secondary400: string;
        secondary500: string;
        secondary600: string;
        secondary700: string;
        secondary800: string;
        secondary900: string;
        neutral: string;
        neutral100: string;
        neutral200: string;
        neutral300: string;
        neutral400: string;
        neutral500: string;
        neutral600: string;
        neutral700: string;
        neutral800: string;
        neutral900: string;
        error100: string;
        error300: string;
        error500: string;
        error600: string;
        error700: string;
        warning100: string;
        warning300: string;
        warning500: string;
        warning600: string;
        warning700: string;
        info100: string;
        info300: string;
        info500: string;
        info600: string;
        info700: string;
        success100: string;
        success300: string;
        success500: string;
        success600: string;
        success700: string;
        background: string;
        foreground: string;
    };
    space: {
        0: string;
        5: string;
        10: string;
        15: string;
        20: string;
        25: string;
        30: string;
        40: string;
        46: string;
        50: string;
        60: string;
        70: string;
        80: string;
        90: string;
        100: string;
        2: string;
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        24: string;
        28: string;
        32: string;
    };
    radii: {
        xs: string;
        sm: string;
        xm: string;
        md: string;
        xl: string;
        lg: string;
        primary: string;
        secondary: string;
    };
    fontSizes: {
        10: string;
        12: string;
        14: string;
        16: string;
        18: string;
        20: string;
        22: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        48: string;
    };
    fonts: {
        primary: string;
        widget: string;
    };
    fontWeights: {
        regular: number;
        medium: number;
        semiBold: number;
        bold: number;
    };
    lineHeights: {
        12: string;
        16: string;
        20: string;
        24: string;
        26: string;
        28: string;
        30: string;
        36: string;
        40: string;
        44: string;
        52: string;
        64: string;
    };
    letterSpacings: {};
    sizes: {
        4: string;
        6: string;
        8: string;
        12: string;
        16: string;
        18: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        45: string;
        48: string;
    };
    borderWidths: {};
    borderStyles: {};
    shadows: {
        s: string;
    };
    zIndices: {};
    transitions: {};
}, DefaultThemeMap, {}>; })[]) => () => string, config: {
    prefix: "";
    media: {
        sm: string;
        md: string;
        lg: string;
    };
    theme: {
        colors: {
            primary: string;
            primary500: string;
            primary600: string;
            secondary: string;
            secondary100: string;
            secondary200: string;
            secondary300: string;
            secondary400: string;
            secondary500: string;
            secondary600: string;
            secondary700: string;
            secondary800: string;
            secondary900: string;
            neutral: string;
            neutral100: string;
            neutral200: string;
            neutral300: string;
            neutral400: string;
            neutral500: string;
            neutral600: string;
            neutral700: string;
            neutral800: string;
            neutral900: string;
            error100: string;
            error300: string;
            error500: string;
            error600: string;
            error700: string;
            warning100: string;
            warning300: string;
            warning500: string;
            warning600: string;
            warning700: string;
            info100: string;
            info300: string;
            info500: string;
            info600: string;
            info700: string;
            success100: string;
            success300: string;
            success500: string;
            success600: string;
            success700: string;
            background: string;
            foreground: string;
        };
        space: {
            0: string;
            5: string;
            10: string;
            15: string;
            20: string;
            25: string;
            30: string;
            40: string;
            46: string;
            50: string;
            60: string;
            70: string;
            80: string;
            90: string;
            100: string;
            2: string;
            4: string;
            6: string;
            8: string;
            12: string;
            16: string;
            24: string;
            28: string;
            32: string;
        };
        radii: {
            xs: string;
            sm: string;
            xm: string;
            md: string;
            xl: string;
            lg: string;
            primary: string;
            secondary: string;
        };
        fontSizes: {
            10: string;
            12: string;
            14: string;
            16: string;
            18: string;
            20: string;
            22: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            48: string;
        };
        fonts: {
            primary: string;
            widget: string;
        };
        fontWeights: {
            regular: number;
            medium: number;
            semiBold: number;
            bold: number;
        };
        lineHeights: {
            12: string;
            16: string;
            20: string;
            24: string;
            26: string;
            28: string;
            30: string;
            36: string;
            40: string;
            44: string;
            52: string;
            64: string;
        };
        letterSpacings: {};
        sizes: {
            4: string;
            6: string;
            8: string;
            12: string;
            16: string;
            18: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            45: string;
            48: string;
        };
        borderWidths: {};
        borderStyles: {};
        shadows: {
            s: string;
        };
        zIndices: {};
        transitions: {};
    };
    themeMap: DefaultThemeMap;
    utils: {};
};
export declare const lightTheme: string & {
    className: string;
    selector: string;
} & import("@stitches/react/types/stitches").ThemeTokens<{}, "">;
export declare const darkTheme: string & {
    className: string;
    selector: string;
} & import("@stitches/react/types/stitches").ThemeTokens<{
    colors: {
        secondary: string;
        secondary400: string;
        secondary500: string;
        secondary600: string;
        neutral: string;
        neutral900: string;
        neutral800: string;
        neutral700: string;
        neutral600: string;
        neutral500: string;
        neutral400: string;
        neutral300: string;
        neutral200: string;
        neutral100: string;
        error500: string;
        warning500: string;
        background: string;
        foreground: string;
    };
    shadows: {
        s: string;
    };
}, "">;
//# sourceMappingURL=theme.d.ts.map