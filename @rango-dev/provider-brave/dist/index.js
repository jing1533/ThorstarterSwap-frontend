var v=Object.defineProperty;var c=(e,n)=>v(e,"name",{value:n,configurable:!0});import{canEagerlyConnectToEvm as N,canSwitchNetworkToEvm as A,chooseInstance as m,getEvmAccounts as T,getSolanaAccounts as b,Networks as s,switchNetworkForEvm as C,WalletTypes as x}from"@rango-dev/wallets-shared";import{evmBlockchains as M,isEvmBlockchain as R,isSolanaBlockchain as L,solanaBlockchain as B}from"rango-types";import{Networks as w}from"@rango-dev/wallets-shared";function p(){let{ethereum:e,braveSolana:n}=window,t=new Map;return e?.isBraveWallet&&t.set(w.ETHEREUM,e),n&&t.set(w.SOLANA,n),t.size===0?null:t}c(p,"brave");import{DefaultEvmSigner as y}from"@rango-dev/signer-evm";import{DefaultSolanaSigner as k}from"@rango-dev/signer-solana";import{Networks as h,getNetworkInstance as u}from"@rango-dev/wallets-shared";import{DefaultSignerFactory as d,TransactionType as S}from"rango-types";function f(e){let n=u(e,h.ETHEREUM),t=u(e,h.SOLANA),r=new d;return r.registerSigner(S.EVM,new y(n)),r.registerSigner(S.SOLANA,new k(t)),r}c(f,"getSigners");var U=x.BRAVE,Q={type:U,defaultNetwork:s.ETHEREUM},X=p,Y=c(async({instance:e,meta:n})=>{let t=m(e,n,s.ETHEREUM),r=m(e,n,s.SOLANA),i=[],l=-32603,g="Please create or import a wallet",a=0;if(t)try{let o=await T(t);i.push(o)}catch(o){if(o.code===l)a+=1;else throw o}if(r)try{let o=await b({instance:r,meta:n});i.push(o)}catch(o){if(o.code===l)a+=1;else throw o}if(a===e.size)throw new Error(g);return i},"connect"),Z=c(({instance:e,updateAccounts:n,meta:t,state:r,updateChainId:i})=>{let l=m(e,t,s.ETHEREUM),g=m(e,t,s.SOLANA);l?.on("accountsChanged",a=>{let o=t.filter(R).find(E=>E.name===s.ETHEREUM)?.chainId;r.connected&&(r.network!=s.ETHEREUM&&o&&i(o),n(a))}),l?.on("chainChanged",a=>{i(a)}),g?.on("accountChanged",async()=>{r.network!=s.SOLANA&&i(t.filter(L)[0].chainId);let o=(await g.connect()).publicKey.toString();n([o])})},"subscribe"),$=C,ee=A,te=f,ne=c(async({instance:e,meta:n})=>{let t=m(e,n,s.ETHEREUM);return t?N({instance:t,meta:n}):Promise.resolve(!1)},"canEagerConnect"),oe=c(e=>{let n=M(e),t=B(e);return{name:"Brave",img:"https://raw.githubusercontent.com/rango-exchange/assets/main/wallets/brave/icon.svg",installLink:{DEFAULT:"https://brave.com/wallet/"},color:"#ef342f",supportedChains:[...n,...t]}},"getWalletInfo");export{ne as canEagerConnect,ee as canSwitchNetworkTo,Q as config,Y as connect,X as getInstance,te as getSigners,oe as getWalletInfo,Z as subscribe,$ as switchNetwork};
//# sourceMappingURL=index.js.map
