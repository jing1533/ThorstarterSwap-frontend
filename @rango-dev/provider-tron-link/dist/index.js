var c=Object.defineProperty;var o=(e,t)=>c(e,"name",{value:t,configurable:!0});import{Networks as i,WalletTypes as d}from"@rango-dev/wallets-shared";import{tronBlockchain as p}from"rango-types";function a(){let{tronLink:e}=window;return e||null}o(a,"tronLink");import{DefaultTronSigner as l}from"@rango-dev/signer-tron";import{DefaultSignerFactory as g,TransactionType as m}from"rango-types";function r(e){let t=new g;return t.registerSigner(m.TRON,new l(e)),t}o(r,"getSigners");var f=d.TRON_LINK,E={type:f,defaultNetwork:i.TRON},W=a,F=o(async({instance:e})=>{let t;if(e&&!e.ready){if(t=await e.request({method:"tron_requestAccounts"}),!t)throw new Error("Please unlock your TronLink extension first.");if(t?.code&&t.message)throw new Error(t.message)}let n=e.tronWeb.address.fromHex((await e.tronWeb.trx.getAccount()).address.toString());return{accounts:n?[n]:[],chainId:i.TRON}},"connect"),I=o(({updateAccounts:e,disconnect:t})=>{window.addEventListener("message",n=>{if(n.data.isTronLink&&n.data.message&&n.data.message.action=="accountsChanged"){let s=n?.data?.message?.data?.address;s?e([s]):t()}})},"subscribe"),R=o(()=>!1,"canSwitchNetworkTo"),A=r,B=o(e=>{let t=p(e);return{name:"TronLink",img:"https://raw.githubusercontent.com/rango-exchange/assets/main/wallets/tronlink/icon.svg",installLink:{CHROME:"https://chrome.google.com/webstore/detail/tronlink/ibnejdfjmmkpcnlpebklmnkoeoihofec",BRAVE:"https://chrome.google.com/webstore/detail/tronlink/ibnejdfjmmkpcnlpebklmnkoeoihofec",DEFAULT:"https://www.tronlink.org"},color:"#96e7ed",supportedChains:t}},"getWalletInfo");export{R as canSwitchNetworkTo,E as config,F as connect,W as getInstance,A as getSigners,B as getWalletInfo,I as subscribe};
//# sourceMappingURL=index.js.map
